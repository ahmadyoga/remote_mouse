name: Build Android Release (No FVM)

on:
  push:
    tags:
      - 'v*.*.*-no-fvm'  # Alternative trigger for non-FVM builds
  workflow_dispatch:
    inputs:
      flutter_version:
        description: 'Flutter version to use'
        required: false
        default: '3.24.0'

env:
  JAVA_VERSION: 17

jobs:
  build-android:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: ${{ env.JAVA_VERSION }}
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ github.event.inputs.flutter_version || '3.32.5' }}
          channel: stable
          cache: true
      
      - name: Install Flutter dependencies
        run: flutter pub get
      
      - name: Generate code (if needed)
        run: |
          if grep -q "build_runner" pubspec.yaml; then
            flutter pub run build_runner build --delete-conflicting-outputs
          fi
      
      - name: Analyze code
        run: flutter analyze --fatal-infos
      
      - name: Run tests
        run: flutter test
      
      - name: Build Android APK (Debug for testing)
        if: "!startsWith(github.ref, 'refs/tags/')"
        run: flutter build apk --debug
      
      - name: Build Android APK (Release)
        if: startsWith(github.ref, 'refs/tags/')
        run: flutter build apk --release --split-per-abi
      
      - name: Build Android App Bundle (Release)
        if: startsWith(github.ref, 'refs/tags/')
        run: flutter build appbundle --release
      
      - name: Upload APK artifacts
        uses: actions/upload-artifact@v3
        with:
          name: android-apk-${{ github.ref_name || 'debug' }}
          path: build/app/outputs/flutter-apk/*.apk
      
      - name: Upload App Bundle artifact
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v3
        with:
          name: android-aab-${{ github.ref_name }}
          path: build/app/outputs/bundle/release/*.aab
      
      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/flutter-apk/*.apk,build/app/outputs/bundle/release/*.aab"
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            ## Remote Mouse Release ${{ github.ref_name }}
            
            ### Download Options:
            - **APK Files**: For direct installation on Android devices
            - **App Bundle (AAB)**: For Google Play Store distribution
            
            ### Installation:
            1. Download the appropriate APK for your device architecture:
               - `app-arm64-v8a-release.apk` - For most modern Android devices (64-bit ARM)
               - `app-armeabi-v7a-release.apk` - For older Android devices (32-bit ARM)
               - `app-x86_64-release.apk` - For x86_64 devices/emulators
            2. Enable "Install from unknown sources" in your Android settings
            3. Install the APK file
            
            ### What's New in This Release:
            - Improved server stability on first startup
            - Fixed port binding issues when restarting server
            - Enhanced error handling and user feedback
            - Better connection state management
          draft: false
          prerelease: false
