name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  JAVA_VERSION: 17

jobs:
  test:
    name: Test and Analyze
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: ${{ env.JAVA_VERSION }}
      
      - name: Setup FVM
        uses: kuhnroyal/flutter-fvm-config-action@v2
        with:
          setup: true
      
      - name: Get Flutter dependencies
        run: flutter pub get
      
      - name: Generate code (if needed)
        run: |
          if grep -q "build_runner" pubspec.yaml; then
            flutter pub run build_runner build --delete-conflicting-outputs
          fi
      
      - name: Verify formatting
        run: flutter format --output=none --set-exit-if-changed .
      
      - name: Analyze project source
        run: flutter analyze --fatal-infos
      
      - name: Run tests
        run: flutter test --coverage
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: coverage/lcov.info
          fail_ci_if_error: false
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  build-android:
    name: Build Android
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: ${{ env.JAVA_VERSION }}
      
      - name: Setup FVM
        uses: kuhnroyal/flutter-fvm-config-action@v2
        with:
          setup: true
      
      - name: Get dependencies
        run: flutter pub get
      
      - name: Generate code
        run: |
          if grep -q "build_runner" pubspec.yaml; then
            flutter pub run build_runner build --delete-conflicting-outputs
          fi
      
      - name: Build Android APK (Debug)
        run: flutter build apk --debug
      
      - name: Upload debug APK
        uses: actions/upload-artifact@v4
        with:
          name: android-debug-apk
          path: build/app/outputs/flutter-apk/app-debug.apk
          retention-days: 7

  build-desktop:
    name: Build Desktop
    needs: test
    runs-on: ${{ matrix.os }}
    if: github.event_name == 'push'
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            platform: linux
            output_path: build/linux/x64/release/bundle/
            artifact_name: linux-desktop
          - os: windows-latest
            platform: windows
            output_path: build/windows/x64/runner/Release/
            artifact_name: windows-desktop
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup FVM
        uses: kuhnroyal/flutter-fvm-config-action@v2
        with:
          setup: true
      
      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake ninja-build libgtk-3-dev xdotool
      
      - name: Get dependencies
        run: flutter pub get
      
      - name: Generate code
        run: |
          if grep -q "build_runner" pubspec.yaml; then
            flutter pub run build_runner build --delete-conflicting-outputs
          fi
      
      - name: Build ${{ matrix.platform }} desktop
        run: flutter build ${{ matrix.platform }} --release
      
      - name: Upload ${{ matrix.platform }} build
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: ${{ matrix.output_path }}
          retention-days: 7

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
      
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
